{"ast":null,"code":"import _regeneratorRuntime from \"D:/PIAIC Projects/nft/open_emojis-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/PIAIC Projects/nft/open_emojis-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/PIAIC Projects/nft/open_emojis-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\PIAIC Projects\\\\nft\\\\open_emojis-master\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Countdown from 'react-countdown';\nimport Web3 from 'web3'; // Import Images + CSS\n\nimport logo from '../images/logo.jpeg';\nimport happyImage from '../images/happy.png';\nimport excitedImage from '../images/excited.png';\nimport sadImage from '../images/sad.png';\nimport './App.css'; // Import ABI + Config\n\nimport OpenEmoji from '../abis/OpenEmoji.json';\nimport CONFIG from '../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openEmoji = _useState4[0],\n      setOpenEmoji = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      supplyAvailable = _useState6[0],\n      setSupplyAvailable = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      balanceOf = _useState8[0],\n      setBalanceOf = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      account = _useState10[0],\n      setAccount = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentNetwork = _useState12[0],\n      setCurrentNetwork = _useState12[1];\n\n  var _useState13 = useState('https://etherscan.io/'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      blockchainExplorerURL = _useState14[0],\n      setBlockchainExplorerURL = _useState14[1];\n\n  var _useState15 = useState('https://opensea.io/'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      openseaURL = _useState16[0],\n      setOpenseaURL = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isMinting = _useState18[0],\n      setIsMinting = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isError = _useState20[0],\n      setIsError = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      message = _useState22[0],\n      setMessage = _useState22[1];\n\n  var _useState23 = useState(new Date().getTime()),\n      _useState24 = _slicedToArray(_useState23, 2),\n      currentTime = _useState24[0],\n      setCurrentTime = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      revealTime = _useState26[0],\n      setRevealTime = _useState26[1];\n\n  var loadBlockchainData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var networkId, _openEmoji, maxSupply, totalSupply, _balanceOf, allowMintingAfter, timeDeployed;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!web3) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 3;\n              return web3.eth.net.getId();\n\n            case 3:\n              networkId = _context.sent;\n              setCurrentNetwork(networkId);\n              _context.prev = 5;\n              _openEmoji = new web3.eth.Contract(OpenEmoji.abi, OpenEmoji.networks[networkId].address);\n              setOpenEmoji(_openEmoji);\n              _context.next = 10;\n              return _openEmoji.methods.maxSupply().call();\n\n            case 10:\n              maxSupply = _context.sent;\n              _context.next = 13;\n              return _openEmoji.methods.totalSupply().call();\n\n            case 13:\n              totalSupply = _context.sent;\n              setSupplyAvailable(maxSupply - totalSupply);\n              _context.next = 17;\n              return _openEmoji.methods.balanceOf(account).call();\n\n            case 17:\n              _balanceOf = _context.sent;\n              setBalanceOf(_balanceOf);\n              _context.next = 21;\n              return _openEmoji.methods.allowMintingAfter().call();\n\n            case 21:\n              allowMintingAfter = _context.sent;\n              _context.next = 24;\n              return _openEmoji.methods.timeDeployed().call();\n\n            case 24:\n              timeDeployed = _context.sent;\n              setRevealTime((Number(timeDeployed) + Number(allowMintingAfter)).toString() + '000');\n\n              if (networkId !== 5777) {\n                setBlockchainExplorerURL(CONFIG.NETWORKS[networkId].blockchainExplorerURL);\n                setOpenseaURL(CONFIG.NETWORKS[networkId].openseaURL);\n              }\n\n              _context.next = 33;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](5);\n              setIsError(true);\n              setMessage(\"Contract not deployed to current network, please change network in MetaMask\");\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 29]]);\n    }));\n\n    return function loadBlockchainData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _web, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(typeof window.ethereum !== 'undefined' && !account)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _web = new Web3(window.ethereum);\n              setWeb3(_web);\n              _context2.next = 5;\n              return _web.eth.getAccounts();\n\n            case 5:\n              accounts = _context2.sent;\n\n              if (accounts.length > 0) {\n                setAccount(accounts[0]);\n              } else {\n                setMessage('Please connect with MetaMask');\n              }\n\n              window.ethereum.on('accountsChanged', function (accounts) {\n                setAccount(accounts[0]);\n                setMessage(null);\n              });\n              window.ethereum.on('chainChanged', function (chainId) {\n                // Handle the new chain.\n                // Correctly handling chain changes can be complicated.\n                // We recommend reloading the page unless you have good reason not to.\n                window.location.reload();\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadWeb3() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // MetaMask Login/Connect\n\n\n  var web3Handler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!web3) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 3;\n              return window.ethereum.request({\n                method: 'eth_requestAccounts'\n              });\n\n            case 3:\n              accounts = _context3.sent;\n              setAccount(accounts[0]);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function web3Handler() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var mintNFTHandler = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(revealTime > new Date().getTime())) {\n                _context5.next = 3;\n                break;\n              }\n\n              window.alert('Minting is not live yet!');\n              return _context5.abrupt(\"return\");\n\n            case 3:\n              if (!(balanceOf > 4)) {\n                _context5.next = 6;\n                break;\n              }\n\n              window.alert('You\\'ve already minted 5 collections!');\n              return _context5.abrupt(\"return\");\n\n            case 6:\n              if (!openEmoji) {\n                _context5.next = 11;\n                break;\n              }\n\n              setIsMinting(true);\n              setIsError(false);\n              _context5.next = 11;\n              return openEmoji.methods.mint(1).send({\n                from: account,\n                value: 0\n              }).on('confirmation', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                var maxSupply, totalSupply, balanceOf;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return openEmoji.methods.maxSupply().call();\n\n                      case 2:\n                        maxSupply = _context4.sent;\n                        _context4.next = 5;\n                        return openEmoji.methods.totalSupply().call();\n\n                      case 5:\n                        totalSupply = _context4.sent;\n                        setSupplyAvailable(maxSupply - totalSupply);\n                        _context4.next = 9;\n                        return openEmoji.methods.balanceOf(account).call();\n\n                      case 9:\n                        balanceOf = _context4.sent;\n                        setBalanceOf(balanceOf);\n\n                      case 11:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }))).on('error', function (error) {\n                window.alert(error);\n                setIsError(true);\n              });\n\n            case 11:\n              setIsMinting(false);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function mintNFTHandler() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadWeb3();\n    loadBlockchainData();\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar fixed-top mx-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0 mx-4\",\n        href: \"https://www.theroyalfalconsociety.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this), \"Minting Falcon Test\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://etherscan.io/address/\".concat(account),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"button nav-button btn-sm mx-4\",\n        children: account.slice(0, 5) + '...' + account.slice(38, 42)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: web3Handler,\n        className: \"button nav-button btn-sm mx-4\",\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-uppercase\",\n            children: \"The Royal Falcon Society\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Welcome to the Society\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"countdown\",\n            children: revealTime !== 0 && /*#__PURE__*/_jsxDEV(Countdown, {\n              date: currentTime + (revealTime - currentTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Mint your FALCON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"90000000000000000 Wei 0.09 Ether (not including gas fees) on 28/11/2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"panel grid\",\n          sm: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: mintNFTHandler,\n            className: \"button mint-button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"panel grid image-showcase mx-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isError ? sadImage : !isError && isMinting ? excitedImage : happyImage,\n            alt: \"emoji-smile\",\n            className: \"image-showcase-example-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: openseaURL + account,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            className: \"button\",\n            children: \"View My Opensea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\".concat(blockchainExplorerURL, \"address/\").concat(account),\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            className: \"button\",\n            children: \"My Etherscan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-2 text-center\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [openEmoji && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\".concat(blockchainExplorerURL, \"address/\").concat(openEmoji._address),\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            className: \"contract-link d-block my-3\",\n            children: openEmoji._address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), CONFIG.NETWORKS[currentNetwork] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Network: \", CONFIG.NETWORKS[currentNetwork].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NFT's Left: \".concat(supplyAvailable, \", You've minted: \").concat(balanceOf)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"xPa8IPwaVWABqT2W7VXEeAh8r80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/PIAIC Projects/nft/open_emojis-master/src/components/App.js"],"names":["useState","useEffect","Row","Col","Countdown","Web3","logo","happyImage","excitedImage","sadImage","OpenEmoji","CONFIG","App","web3","setWeb3","openEmoji","setOpenEmoji","supplyAvailable","setSupplyAvailable","balanceOf","setBalanceOf","account","setAccount","currentNetwork","setCurrentNetwork","blockchainExplorerURL","setBlockchainExplorerURL","openseaURL","setOpenseaURL","isMinting","setIsMinting","isError","setIsError","message","setMessage","Date","getTime","currentTime","setCurrentTime","revealTime","setRevealTime","loadBlockchainData","eth","net","getId","networkId","Contract","abi","networks","address","methods","maxSupply","call","totalSupply","allowMintingAfter","timeDeployed","Number","toString","NETWORKS","loadWeb3","window","ethereum","getAccounts","accounts","length","on","chainId","location","reload","web3Handler","request","method","mintNFTHandler","alert","mint","send","from","value","error","slice","_address","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Countdown from 'react-countdown'\nimport Web3 from 'web3'\n\n// Import Images + CSS\nimport logo from '../images/logo.jpeg'\nimport happyImage from '../images/happy.png'\nimport excitedImage from '../images/excited.png'\nimport sadImage from '../images/sad.png'\nimport './App.css'\n\n// Import ABI + Config\nimport OpenEmoji from '../abis/OpenEmoji.json';\nimport CONFIG from '../config.json';\n\nfunction App() {\n\tconst [web3, setWeb3] = useState(null)\n\tconst [openEmoji, setOpenEmoji] = useState(null)\n\n\tconst [supplyAvailable, setSupplyAvailable] = useState(0)\n\tconst [balanceOf, setBalanceOf] = useState(0)\n\n\tconst [account, setAccount] = useState(null)\n\tconst [currentNetwork, setCurrentNetwork] = useState(null)\n\n\tconst [blockchainExplorerURL, setBlockchainExplorerURL] = useState('https://etherscan.io/')\n\tconst [openseaURL, setOpenseaURL] = useState('https://opensea.io/')\n\n\tconst [isMinting, setIsMinting] = useState(false)\n\tconst [isError, setIsError] = useState(false)\n\tconst [message, setMessage] = useState(null)\n\n\tconst [currentTime, setCurrentTime] = useState(new Date().getTime())\n\tconst [revealTime, setRevealTime] = useState(0)\n\n\tconst loadBlockchainData = async () => {\n\t\t// Fetch Contract, Data, etc.\n\t\tif (web3) {\n\t\t\tconst networkId = await web3.eth.net.getId()\n\t\t\tsetCurrentNetwork(networkId)\n\n\t\t\ttry {\n\t\t\t\tconst openEmoji = new web3.eth.Contract(OpenEmoji.abi, OpenEmoji.networks[networkId].address)\n\t\t\t\tsetOpenEmoji(openEmoji)\n\n\t\t\t\tconst maxSupply = await openEmoji.methods.maxSupply().call()\n\t\t\t\tconst totalSupply = await openEmoji.methods.totalSupply().call()\n\t\t\t\tsetSupplyAvailable(maxSupply - totalSupply)\n\n\t\t\t\tconst balanceOf = await openEmoji.methods.balanceOf(account).call()\n\t\t\t\tsetBalanceOf(balanceOf)\n\n\t\t\t\tconst allowMintingAfter = await openEmoji.methods.allowMintingAfter().call()\n\t\t\t\tconst timeDeployed = await openEmoji.methods.timeDeployed().call()\n\t\t\t\tsetRevealTime((Number(timeDeployed) + Number(allowMintingAfter)).toString() + '000')\n\n\t\t\t\tif (networkId !== 5777) {\n\t\t\t\t\tsetBlockchainExplorerURL(CONFIG.NETWORKS[networkId].blockchainExplorerURL)\n\t\t\t\t\tsetOpenseaURL(CONFIG.NETWORKS[networkId].openseaURL)\n\t\t\t\t}\n\n\t\t\t} catch (error) {\n\t\t\t\tsetIsError(true)\n\t\t\t\tsetMessage(\"Contract not deployed to current network, please change network in MetaMask\")\n\t\t\t}\n\n\t\t}\n\t}\n\n\tconst loadWeb3 = async () => {\n\t\tif (typeof window.ethereum !== 'undefined' && !account) {\n\t\t\tconst web3 = new Web3(window.ethereum)\n\t\t\tsetWeb3(web3)\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n\n\t\t\tif (accounts.length > 0) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t} else {\n\t\t\t\tsetMessage('Please connect with MetaMask')\n\t\t\t}\n\n\t\t\twindow.ethereum.on('accountsChanged', function (accounts) {\n\t\t\t\tsetAccount(accounts[0])\n\t\t\t\tsetMessage(null)\n\t\t\t});\n\n\t\t\twindow.ethereum.on('chainChanged', (chainId) => {\n\t\t\t\t// Handle the new chain.\n\t\t\t\t// Correctly handling chain changes can be complicated.\n\t\t\t\t// We recommend reloading the page unless you have good reason not to.\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t}\n\t}\n\n\t// MetaMask Login/Connect\n\tconst web3Handler = async () => {\n\t\tif (web3) {\n\t\t\tconst accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\tsetAccount(accounts[0])\n\t\t}\n\t}\n\n\tconst mintNFTHandler = async () => {\n\t\tif (revealTime > new Date().getTime()) {\n\t\t\twindow.alert('Minting is not live yet!')\n\t\t\treturn\n\t\t}\n\n\t\tif (balanceOf > 4) {\n\t\t\twindow.alert('You\\'ve already minted 5 collections!')\n\t\t\treturn\n\t\t}\n\n\t\t// Mint NFT\n\t\tif (openEmoji) {\n\t\t\tsetIsMinting(true)\n\t\t\tsetIsError(false)\n\n\t\t\tawait openEmoji.methods.mint(1).send({ from: account, value: 0 })\n\t\t\t\t.on('confirmation', async () => {\n\t\t\t\t\tconst maxSupply = await openEmoji.methods.maxSupply().call()\n\t\t\t\t\tconst totalSupply = await openEmoji.methods.totalSupply().call()\n\t\t\t\t\tsetSupplyAvailable(maxSupply - totalSupply)\n\n\t\t\t\t\tconst balanceOf = await openEmoji.methods.balanceOf(account).call()\n\t\t\t\t\tsetBalanceOf(balanceOf)\n\t\t\t\t})\n\t\t\t\t.on('error', (error) => {\n\t\t\t\t\twindow.alert(error)\n\t\t\t\t\tsetIsError(true)\n\t\t\t\t})\n\t\t}\n\n\t\tsetIsMinting(false)\n\t};\n\n\tuseEffect(() => {\n\t\tloadWeb3()\n\t\tloadBlockchainData()\n\t}, [account]);\n\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"navbar fixed-top mx-3\">\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"navbar-brand col-sm-3 col-md-2 mr-0 mx-4\"\n\t\t\t\t\thref=\"https://www.theroyalfalconsociety.com/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\tMinting Falcon Test \n\t\t\t\t\t\n\t\t\t\t</a>\n\n\t\t\t\t{account ? (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://etherscan.io/address/${account}`}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tclassName=\"button nav-button btn-sm mx-4\">\n\t\t\t\t\t\t{account.slice(0, 5) + '...' + account.slice(38, 42)}\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<button onClick={web3Handler} className=\"button nav-button btn-sm mx-4\">Connect Wallet</button>\n\t\t\t\t)}\n\t\t\t</nav>\n\t\t\t<main>\n\t\t\t\t<Row className=\"my-3\">\n\t\t\t\t\t<Col className=\"text-center\">\n\t\t\t\t\t\t<h1 className=\"text-uppercase\">The Royal Falcon Society</h1>\n\t\t\t\t\t\t<h2 className=\"\"><i>Welcome to the Society</i></h2>\n\t\t\t\t\t\t<p className=\"countdown\">\n\t\t\t\t\t\t\t{revealTime !== 0 && <Countdown date={currentTime + (revealTime - currentTime)} />}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>Mint your FALCON</p>\n\t\t\t\t\t\t<p>90000000000000000 Wei 0.09 Ether (not including gas fees) on 28/11/2021</p>\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"my-4\">\n\t\t\t\t\t<Col className=\"panel grid\" sm={12} md={6}>\n\t\t\t\t\t\t<button onClick={mintNFTHandler} className=\"button mint-button\"><span>Mint</span></button>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"panel grid image-showcase mx-4\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={isError ? (\n\t\t\t\t\t\t\t\tsadImage\n\t\t\t\t\t\t\t) : !isError && isMinting ? (\n\t\t\t\t\t\t\t\texcitedImage\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\thappyImage\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\talt=\"emoji-smile\"\n\t\t\t\t\t\t\tclassName=\"image-showcase-example-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"my-3\">\n\t\t\t\t\t<Col className=\"flex\">\n\t\t\t\t\t\t<a href={openseaURL + account} target=\"_blank\" rel=\"noreferrer\" className=\"button\">View My Opensea</a>\n\t\t\t\t\t\t<a href={`${blockchainExplorerURL}address/${account}`} target=\"_blank\" rel=\"noreferrer\" className=\"button\">My Etherscan</a>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"my-2 text-center\">\n\t\t\t\t\t{message ? (\n\t\t\t\t\t\t<p>{message}</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{openEmoji &&\n\t\t\t\t\t\t\t\t<a href={`${blockchainExplorerURL}address/${openEmoji._address}`}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\tclassName=\"contract-link d-block my-3\">\n\t\t\t\t\t\t\t\t\t{openEmoji._address}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{CONFIG.NETWORKS[currentNetwork] && (\n\t\t\t\t\t\t\t\t<p>Current Network: {CONFIG.NETWORKS[currentNetwork].name}</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<p>{`NFT's Left: ${supplyAvailable}, You've minted: ${balanceOf}`}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}